trigger:
  branches:
    include:
    - master
  tags:
    include: ['*']

name:  $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  CURRENT_DATE: $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]
  REPOSITORY_NAME: $(Build.Repository.Name)
  COMMIT_TAG: $(git log --format=%h -1)

steps:
- script: |
    curl -L https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb -o pacman.deb
    sudo apt update
    sudo apt install p7zip-full haveged qrencode
    sudo dpkg -i pacman.deb
    sudo dkp-pacman -Sy
    sudo dkp-pacman -S nds-dev --noconfirm
    sudo dkp-pacman -S switch-dev --noconfirm
    sudo dkp-pacman -S 3ds-dev --noconfirm
    sudo dkp-pacman -S 3ds-curl 3ds-libarchive 3ds-liblzma 3ds-mbedtls 3ds-bzip2 3ds-zlib 3ds-sdl 3ds-sdl_mixer 3ds-mpg123 --noconfirm
    sudo dkp-pacman -S  switch-sdl2 switch-sdl2_image switch-libpng switch-libjpeg-turbo switch-sdl2_gfx  switch-sdl2_ttf switch-sdl2_mixer switch-freetype --noconfirm

    curl -L https://github.com/Steveice10/bannertool/releases/download/1.1.0/bannertool.zip -o bannertool.zip

    sudo 7z e bannertool.zip linux-x86_64/bannertool

    sudo chmod +x bannertool

    rm bannertool.zip

    curl -L https://github.com/profi200/Project_CTR/releases/download/0.15/makerom_015_ctrtool.zip -o makerom_015_ctrtool.zip

    sudo 7z e makerom_015_ctrtool.zip Linux_x86_64/makerom

    sudo chmod +x makerom

    rm makerom_015_ctrtool.zip

    cp makerom 3ds/makerom
    cp bannertool 3ds/bannertool
  displayName: 'Setup environment'

- script: |
    echo $(TRAVIS_COMMIT)
    echo $(COMMIT_TAG)
    echo $(BUILD_SOURCEVERSION)
  displayName: 'Echo Variables'
  
- script: |
    export DEVKITPRO="/opt/devkitpro"
    export DEVKITARM="/opt/devkitpro/devkitARM"
    make
    mv dsi/Universal-Manager.nds Universal-Manager.nds
    mv 3ds/Universal-Manager.cia Universal-Manager.cia
    mv 3ds/Universal-Manager.3dsx Universal-Manager.3dsx
    mv switch/Universal-Manager.nro Universal-Manager.nro
    export COMMIT_TAG="$(git log --format=%h -1)"
    export COMMIT_MESSAGE="$(git log --pretty=format:"%an - %s" -1)"
    ls
    cd 3ds/
    ls
    cd ../
    echo '##vso[task.setvariable variable=COMMIT_TAG]'$(git log --format=%h -1)
    echo '##vso[task.setvariable variable=COMMIT_MESSAGE]'$(git log --pretty=format:"%an - %s" -1)
  displayName: 'Build Universal-Manager'

- script: |    
    git config --global user.email "flamekat54@aol.com"
    git config --global user.name "TWLBot"
    git clone https://$GITHUB_TOKEN@github.com/Universal-Team/extras.git
    cd extras/builds/Universal-Manager
    cp ../../../Universal-Manager.nds Universal-Manager.nds
    cp ../../../Universal-Manager.cia Universal-Manager.cia
    cp ../../../Universal-Manager.3dsx Universal-Manager.3dsx
    cp ../../../Universal-Manager.nro Universal-Manager.nro
    git stage .
    git commit -m "Universal-Manager | $(COMMIT_TAG)"
    git push origin master
    git tag v$CURRENT_DATE
    echo '##vso[task.setvariable variable=EXTRAS_COMMIT]'$(git log -1 --format="%H")
  displayName: "Commit to Universal-Team/extras"

- task: GitHubRelease@0
  displayName: "Release to Universal-Team/extras"
  inputs:
    gitHubConnection: TWLBot
    repositoryName: Universal-Team/extras
    action: create
    target: $(EXTRAS_COMMIT)
    tagSource: 'manual'
    tag: v$(CURRENT_DATE)
    title: Universal-Manager | $(COMMIT_TAG)
    releaseNotesSource: input
    releaseNotes: $(COMMIT_MESSAGE)
    assets: '$(Build.ArtifactStagingDirectory)/**/*'
    isPreRelease: true
    addChangeLog: false

- task: GitHubRelease@0
  displayName: "Release to Universal-Team/Universal-Manager"
  condition: startsWith(variables['Build.SourceBranchName'], 'v')
  inputs:
    gitHubConnection: TWLBot
    repositoryName: Universal-Team/Universal-Manager
    action: edit
    target: '$(Build.SourceVersion)'
    tag: $(Build.SourceBranchName)
    assets: '$(Build.ArtifactStagingDirectory)/**/*'

- script: |
    curl -o send.sh https://raw.githubusercontent.com/Universal-Team/discord-webhooks/master/send-azure.sh
    chmod +x send.sh
    ./send.sh success $WEBHOOK_URL
  condition: succeeded()
  displayName: "Send success webhook"
- script: |
    curl -o send.sh https://raw.githubusercontent.com/Universal-Team/discord-webhooks/master/send-azure.sh
    chmod +x send.sh
    ./send.sh failure $WEBHOOK_URL
  condition: failed()
  displayName: "Send failure webhook"
